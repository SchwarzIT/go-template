name: Semgrep

on:
  # Scan changed files in PRs, block on new issues only (existing issues ignored)
  pull_request: {}

  # Scan all files on branches, block on any issues
  # push:
  #   branches: ["master", "main"]

jobs:
  semgrep:
    name: Scan
    runs-on: ubuntu-latest
    # Skip any PR created by dependabot to avoid permission issues
    if: (github.actor != 'dependabot[bot]')
    steps:
      # Fetch project source
      - uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3.0.0

      - uses: returntocorp/semgrep-action@v1
        with:
          config: >- # more at semgrep.dev/explore
            p/security-audit
            p/secrets
            p/ci
            p/r2c
            p/r2c-ci
            p/docker
            p/dockerfile
            p/command-injection
          # == Optional settings in the `with:` block
          # Instead of `config:`, use rules set in Semgrep App.
          # Get your credentials from semgrep.dev/manage/settings.
          #   publishDeployment: ${{ secrets.SEMGREP_DEPLOYMENT_ID }}
          #   publishToken: ${{ secrets.SEMGREP_APP_TOKEN }}

          # Never fail the build due to findings on pushes.
          # Instead, just collect findings for semgrep.dev/manage/findings
          #   auditOn: push

          # Upload findings to GitHub Advanced Security Dashboard [step 1/2]
          # See also the next step.
          generateSarif: "1"

        # Change job timeout (default is 1800 seconds; set to 0 to disable)
        # env:
        #   SEMGREP_TIMEOUT: 300

      # Upload findings to GitHub Advanced Security Dashboard [step 2/2]
      - name: Upload SARIF file for GitHub Advanced Security Dashboard
        uses: github/codeql-action/upload-sarif@75f07e7ab2ee63cba88752d8c696324e4df67466 # tag=v1.1.3
        with:
          sarif_file: semgrep.sarif
        if: always()
