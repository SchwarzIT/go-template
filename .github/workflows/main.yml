---
# based on https://github.com/mvdan/github-actions-golang
name: CI

on:
  pull_request:
    branches: ["main"]
    paths-ignore: ["docs/**"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Go
        uses: actions/setup-go@f6164bd8c8acb4a71fb2791a8b6c4024ff038dab # tag=v3.0.0
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3.0.0

      # cache go modules
      - uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # tag=v2.1.7
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run linting & unittest
        if: matrix.os == 'ubuntu-latest'
        run: make ci

      - name: Build package
        run: make build

      - name: Execute build
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: ./out/bin/gt --help

      - name: Execute build
        if: matrix.os == 'windows-latest'
        run: ./out/bin/gt.exe --help

      - name: Create a test project
        run: make create-test-project
