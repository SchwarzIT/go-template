---
# based on https://github.com/mvdan/github-actions-golang
name: CI

on:
  pull_request:
    branches: ["main"]
    paths-ignore: ["docs/**", "config/version.txt"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Go
        uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version: 1.20.x

      - name: Checkout code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

      # cache go modules
      - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
            bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run linting
        if: matrix.os == 'ubuntu-latest'
        run: make lint

      - name: Run unittest
        if: matrix.os == 'ubuntu-latest'
        run: make test-coverage

      - name: Go Coverage Badge
        uses: tj-actions/coverage-badge-go@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          green: 80
          filename: out/coverage.out

      - uses: stefanzweifel/git-auto-commit-action@v4
        if: matrix.os == 'ubuntu-latest'
        id: auto-commit-action
        with:
          commit_message: Apply Code Coverage Badge
          skip_fetch: true
          skip_checkout: true
          file_pattern: ./README.md

      - name: Run Vulnerability detection using govulncheck
        if: matrix.os == 'ubuntu-latest'
        run: make govulncheck

      - name: Build package
        run: make build

      - name: Execute build
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: ./out/bin/gt --help

      - name: Execute build
        if: matrix.os == 'windows-latest'
        run: ./out/bin/gt.exe --help

      - name: Create a test project & test it
        run: |
          make testing-project-default
          make -C testing-project ci
          make -C testing-project all

      - name: Test generate projects
        run: make testing-project-ci

      - name: Push Changes
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.ref }}
