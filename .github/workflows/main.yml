---
# based on https://github.com/mvdan/github-actions-golang
name: CI

on:
  pull_request:
    branches: ["main"]
    paths-ignore: ["docs/**"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.18.x, 1.19.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Go
        uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f # tag=v3.3.0
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0

      # cache go modules
      - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # tag=v3.0.11
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run linting & unittest
        if: matrix.os == 'ubuntu-latest'
        run: make ci

      - name: Build package
        run: make build

      - name: Execute build
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: ./out/bin/gt --help

      - name: Execute build
        if: matrix.os == 'windows-latest'
        run: ./out/bin/gt.exe --help

      - name: Create a test project & test it
        run: |
          make testing-project-default
          make -C testing-project ci
          make -C testing-project all

      - name: Test generate projects
        run: make testing-project-ci
